version = '0.5-SNAPSHOT'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

defaultTasks 'clean', 'build'

repositories {
    mavenCentral()
}

allprojects {
    apply plugin: 'idea'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'osgi'
    apply plugin: 'signing'

    compileJava.options.encoding = 'UTF-8'
    compileTestJava {
        options.encoding = 'UTF-8'
        System.setProperty('file.encoding', 'UTF-8')
    }
    //compileTestJava.options.encoding = 'UTF-8'

    sourceCompatibility = 1.8
    group = 'com.github.boereck'
    archivesBaseName = project.parent.name + '-' + project.name

    javadoc {
        options.charSet = 'UTF-8'
        options.encoding = 'UTF-8'
        options.links = [ 'http://docs.oracle.com/javase/8/docs/api/' ]
        // we don't want to get complaints about tags unknown to JavaDoc, but valid, tags
        options.addStringOption('Xdoclint:none', '-quiet')
    }

/*    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }*/

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.11'
    }

    // run gradle -Penable_signing=on to sign jars
    // be sure to configure signing on machine.
    // therefore configure the following variables in your
    // gradle config file (USER_HOME/.gradle/gradle.properties) :
    //  signing.keyId=<key-id>
    //  signing.password=<password>
    //  signing.secretKeyRingFile=/path/to/gpg-file
    if(project.hasProperty("enable_signing")) {
        signing {
            sign configurations.archives
        }
    }
}

// Project specific dependencies

project(':matcher') {
    javadoc {
        options.overview = 'src/main/java/overview.html'
    }
}

project(':guava') {
    dependencies {
        compile group: 'com.google.guava', name: 'guava', version: '15.0'
        compile project(':matcher')
    }
}

project(':experimental') {
    dependencies {
        compile project(':matcher')
    }
}

project(':hamcrest') {
    dependencies {
        compile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    }
}

// include publishing when -Ppublishing is added to command line
if(project.hasProperty("publishing")) {
    apply from: 'publish.gradle'
}
